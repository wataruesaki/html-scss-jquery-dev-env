@use "variable" as v;
@use "sass:math";

// * Media queries
@function bd() {
  $res: map-get(v.$mq, bd);

  @if ($res != "sp" and $res != "pc") {
    @error "Base device must be "sp" or "pc"."
  } @else {
    @return $res;
  }
}

@function bp-status($bp) {
  $res: 0;
  $bps: map-remove(v.$mq, bd);

  @each $key, $val in $bps {
    @if ($bp == $key) {
      @if ($val == "") {
        $res: 1;
      } @else {
        @if (unitless($val) == false) {
          $res: 2;
        } @else {
          $res: 3;
        }
      }
    }
  }

  /**
   * 0: $bp doesn't exist
   * 1: $bp exists but its value is empty
   * 2: $bp exists but its value has unit
   * 3: No problem
   */
  @return $res;
}

@function bp($bp) {
  $bp-status: bp-status($bp);

  @if ($bp-status == 0) {
    @error "#{$bp} doesn't exist in $mq.";
  } @else if ($bp-status == 1) {
    @error "#{$bp} exists but its value is empty.";
  } @else if ($bp-status == 2) {
    @error "#{$bp} exists but its value has unit.";
  } @else if ($bp-status == 3) {
    @if (bd() == "sp") {
      @return map-get(v.$mq, $bp) + px;
    } @else if (bd() == "pc") {
      @return (map-get(v.$mq, $bp) - 1) + px;
    } @else {
      @warn "bd() doesn't work.";
    }
  }
}

@mixin mq($bp) {
  @if ($bp == se) {
    @media screen and (max-width: bp($bp)) {
      @content;
    }
  } @else {
    @if (bd() == "sp") {
      @media screen and (min-width: bp($bp)) {
        @content;
      }
    } @else if (bd() == "pc") {
      @media screen and (max-width: bp($bp)) {
        @content;
      }
    }
  }
}

// * Images
@mixin bg($path) {
  background-image: url("../images/" + $path);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

@mixin set-bg($path) {
  background-image: url("../images/" + $path);
}

@mixin rm-bg() {
  background-image: none;
}

@mixin img($path) {
  background-image: url("../images/" + $path);
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}

@mixin set-img($path) {
  background-image: url("../images/" + $path);
}

@mixin rm-img() {
  background-image: none;
}

// * Fonts
@mixin fz($fz, $px: false) {
  @if ($px) {
    font-size: floor($fz * 10) + px;
  }

  font-size: math.div(floor($fz * 10), 10) + rem;
}
