@use "variable" as v;
@use "sass:math";

// * Media queries
@function bd(){
  @return map-get(v.$mq, bd);
}

@function bp($bp) {
  @return map-get(v.$mq, $bp);
}

@mixin mq($bp) {
  $is-valid: false;
  $keys: map-keys(map-remove(v.$mq, bd));

  @each $key in $keys {
    @if ($bp == $key) {
      $is-valid: true;
    }
  }

  @if ($is-valid == false) {
    @error "#{$bp} doesn't exist in $mq variable.";
  }

  @if ($bp == se) {
    @media screen and (max-width: bp($bp)) {
      @content;
    }
  } @else if (bd() == "sp") {
    @media screen and (min-width: bp($bp)) {
      @content;
    }
  } @else if (bd() == "pc") {
    @media screen and (max-width: bp($bp) - 1) {
      @content;
    }
  } @else {
    @warn "mq($bp) doesn't work.";
  }
}

// * Images
@mixin bg($path) {
  background-image: url("../images/" + $path);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

@mixin set-bg($path) {
  background-image: url("../images/" + $path);
}

@mixin rm-bg() {
  background-image: none;
}

@mixin img($path) {
  background-image: url("../images/" + $path);
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}

@mixin set-img($path) {
  background-image: url("../images/" + $path);
}

@mixin rm-img() {
  background-image: none;
}

// * Fonts
@mixin fz($fz, $px: false) {
  @if ($px) {
    font-size: floor($fz * 10) + px;
  }

  font-size: math.div(floor($fz * 10), 10) + rem;
}
